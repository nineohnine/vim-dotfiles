set encoding=utf-8
set nocompatible               " be iMproved
filetype off                   " required!

"set rtp+=~/.vim/bundle/vundle/
"call vundle#rc()


call plug#begin('~/.config/nvim/plugged')

Plug 'tpope/vim-sensible'

" let Vundle manage Vundle
" Plug 'gmarik/vundle'

" Vundle help
""""""""""""""
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles


" VCS
Plug 'tpope/vim-fugitive'

" System
Plug 'scrooloose/nerdtree'
Plug 'vim-scripts/Gist.vim'
Plug 'majutsushi/tagbar'
Plug 'mileszs/ack.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-surround'
Plug 'scrooloose/syntastic'
Plug 'ervandew/supertab'
Plug 'Raimondi/delimitMate'
Plug 'kien/rainbow_parentheses.vim'
Plug 'sophacles/vim-bundle-sparkup'

" Syntaxes and such.
Plug 'tpope/vim-cucumber'
Plug 'leshill/vim-json'
Plug 'tpope/vim-liquid'
Plug 'rodjek/vim-puppet'
Plug 'tpope/vim-haml'
Plug 'kchmck/vim-coffee-script'
Plug 'plasticboy/vim-markdown'
Plug 'groenewege/vim-less'
Plug 'jcf/vim-latex'
"Plug 'othree/html5.vim'
Plug 'Valloric/YouCompleteMe'

"Javascript
Plug 'pangloss/vim-javascript'


" Python bundles
Plug 'fs111/pydoc.vim'
Plug 'vim-scripts/python_match.vim'
Plug 'Glench/Vim-Jinja2-Syntax'

" Ruby specific
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-endwise'

" Ctags tagbar
Plug 'majutsushi/tagbar'

" Non-github repos
Plug 'git://git.wincent.com/command-t.git'

" color schemes
Plug 'altercation/vim-colors-solarized'
Plug '29decibel/codeschool-vim-theme'
Plug 'morhetz/gruvbox'
Plug 'reedes/vim-colors-pencil'
Plug 'vim-airline/vim-airline-themes'

" Fun, but not useful
"Plug 'altercation/vim-colors-solarized'
"Plug 'skammer/vim-css-color'
"Plug 'mgutz/vim-colors'
"Plug 'ehamberg/vim-cute-python'
"Plug 'tpope/vim-speeddating'
"Plug 'Lokaltog/vim-powerline'
"Plug 'modess/vim-phpcolors'
"Plug 'noahfrederick/vim-hemisu'
"Plug 'Lokaltog/vim-distinguished'
"Plug 'rickharris/vim-blackboard'
"Plug 'nineohnine/vim-vibrant'

set laststatus=2
set viminfo='100,n$HOME/.vim/files/info/viminfo

call plug#end()


filetype plugin indent on     " required!

" Configurations
""""""""""""""""
"if has('gui_running')
"	set background=light
"else
	set background=dark
  set guifont=Source\ Code\ Pro:h15
"endif

" Wildmenu completion
"""""""""""""""""""""
set wildmenu
set wildmode=list:longest
set wildignore+=.hg,.git,.svn                    " Version control
set wildignore+=*.aux,*.out,*.toc                " LaTeX intermediate files
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg   " binary images
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest " compiled object files
set wildignore+=*.spl                            " compiled spelling word lists
set wildignore+=*.sw?                            " Vim swap files
set wildignore+=*.DS_Store                       " OSX bullshit
set wildignore+=*.luac                           " Lua byte code
set wildignore+=*.pyc                            " Python byte code
set wildignore+=**.class                          " Cursed Java class files

" Save when losing focus
set autowriteall " Auto-save files when switching buffers or leaving vim.
au FocusLost * silent! :wa
au TabLeave * silent! :wa

" Resize splits when the window is resized
au VimResized * exe "normal! \<c-w>="

" Colours

"set termguicolors
set t_Co=256
set background=dark
colorscheme gruvbox

" Basic
syntax enable
syntax on
set number        " always show line numbers
"set hidden        " Allow un-saved buffers in background
set clipboard=unnamed " Share system clipboard.
set backspace=indent,eol,start " Make backspace behave normally.
set directory=/tmp// " swap files
set backupskip=/tmp/*,/private/tmp/*
set ffs=unix,dos,mac "Default file types
set nowrap        " don't wrap lines
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                  "  case-sensitive otherwise
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type
set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

" Remove the toolbar if we're running under a GUI (e.g. MacVIM).
if has("gui_running")
  set guioptions=-t
endif

" Special characters for hilighting non-priting spaces/tabs/etc.
set list listchars=tab:→\ ,trail:·

" Tabs & spaces
set tabstop=2     " a tab is four spaces
set shiftwidth=2  " number of spaces to use for autoindenting
set softtabstop=2
set noexpandtab
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting

" General Code Folding
""""""""""""""""""""""
set foldmethod=indent
set foldlevel=99

" Highlight VCS conflict markers
""""""""""""""""""""""""""""""""
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

" I CAN HAZ NORMAL REGEXES?
"""""""""""""""""""""""""""
nnoremap / /\v
vnoremap / /\v


" General auto-commands
"""""""""""""""""""""""
autocmd FileType * setlocal colorcolumn=0
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red

" Get rid of trailing whitespace highlighting in mutt.
autocmd FileType mail highlight clear ExtraWhitespace
autocmd FileType mail setlocal listchars=

" Crontab auto-commands
"""""""""""""""""""""""
autocmd FileType crontab setlocal backupcopy=yes

" Markdown auto-commands
""""""""""""""""""""""""
autocmd FileType markdown setlocal wrap linebreak nolist

" Ruby Configurations
"""""""""""""""""""""
autocmd FileType ruby set shiftwidth=2 tabstop=2

" PHP Configurations
""""""""""""""""""""
autocmd FileType php setlocal colorcolumn=100
autocmd FileType php setlocal shiftwidth=4 tabstop=4 softtabstop=4 expandtab


" HTML configurations
"""""""""""""""""""""
autocmd FileType html setlocal expandtab

" Python configurations
"""""""""""""""""""""""
autocmd FileType python setlocal shiftwidth=4 tabstop=4 softtabstop=4 expandtab
autocmd FileType python setlocal colorcolumn=80
"autocmd FileType python let g:pep8_map='<F4>'
"autocmd FileType python map <buffer> <F4> :call Flake8()<CR>
"autocmd BufWritePost *.py call Flake8()

" Coffeescript configurations
"""""""""""""""""""""""""""""
auto BufNewFile,BufReadPost *.coffee setlocal foldmethod=indent
au BufNewFile,BufReadPost *.coffee setlocal shiftwidth=2 expandtab


" css configurations
"""""""""""""""""""""""""""
au BufNewFile,BufReadPost *.css setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab


" scss configurations
"""""""""""""""""""""""""""
au BufNewFile,BufReadPost *.scss setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab


" Javascript configurations
"""""""""""""""""""""""""""
au BufNewFile,BufReadPost *.js setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab

" Get jinja filetype selection working correctly for *.jinja.html files.
au BufNewFile,BufReadPost *.jinja.html setlocal filetype=htmljinja

" Make sure we hilight extra whitespace in the most annoying way possible.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/

" Custom mappings
""""""""""""""""""

" Genral
noremap <silent> <F3> :QFix<CR>


" Change leader
let mapleader = ","
let g:mapleader = ","

" Get rid of search hilighting with ,/
nnoremap <silent> <leader>/ :nohlsearch<CR>

" Fix those pesky situations where you edit & need sudo to save
cmap w!! w !sudo tee % >/dev/null


" Plugin configurations
""""""""""""""""""""""""

" Gist
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 2
let g:gist_show_privates = 1

" TaskList
"map <leader>l <Plug>TaskList

" TagBar
nnoremap <silent> <F2> :TagbarToggle<CR>
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'
let g:tagbar_autoshowtag = 1

" Tagbar/ctags
""""""""""""""
nmap <F2> :TagbarToggle<CR>

" Command-T
nnoremap <Leader>t :CommandT<CR>

" NERDTree
nnoremap <Leader>g :NERDTreeToggle<CR>

" SnipMate
let g:snippets_dir = "~/.vim/bundle/snipmate-snippets"

" Sparkup
let g:sparkupExecuteMapping = '<c-y>'
let g:sparkupNextMapping = '<c-k>'

" Double rainbow - What does it mean!?
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

set laststatus=2
let g:syntastic_enable_signs=1
let g:syntastic_auto_jump=0
let g:syntastic_enable_baloons=1
let g:syntastic_auto_loc_list=1
let g:syntastic_check_on_open=1
